#!/usr/bin/env bash

set -ueo pipefail

# Base Configuration

## Used via indirect REC_MODE variable reference

# shellcheck disable=SC2034
EXPECTED_HORIZONTAL_SCREEN_WIDTH=3360
# shellcheck disable=SC2034
EXPECTED_HORIZONTAL_SCREEN_HEIGHT=1418

# shellcheck disable=SC2034
EXPECTED_VERTICAL_SCREEN_WIDTH=5120
# shellcheck disable=SC2034
EXPECTED_VERTICAL_SCREEN_HEIGHT=2160

# shellcheck disable=SC2034
REC_HORIZONTAL_WIDTH=1920
# shellcheck disable=SC2034
REC_HORIZONTAL_HEIGHT=1080

# shellcheck disable=SC2034
REC_VERTICAL_WIDTH=1080
# shellcheck disable=SC2034
REC_VERTICAL_HEIGHT=1920

# shellcheck disable=SC2034
REC_HORIZONTAL_PADDING_LEFT=48
# REC_HORIZONTAL_PADDING_LEFT=0
# shellcheck disable=SC2034
REC_HORIZONTAL_PADDING_TOP=48
# REC_HORIZONTAL_PADDING_TOP=0
# shellcheck disable=SC2034
REC_HORIZONTAL_PADDING_RIGHT=48
# REC_HORIZONTAL_PADDING_RIGHT=0
# shellcheck disable=SC2034
REC_HORIZONTAL_PADDING_BOTTOM=48
# REC_HORIZONTAL_PADDING_BOTTOM=0

# shellcheck disable=SC2034
REC_VERTICAL_PADDING_LEFT=48
# shellcheck disable=SC2034
REC_VERTICAL_PADDING_TOP=48
# shellcheck disable=SC2034
REC_VERTICAL_PADDING_RIGHT=48
# shellcheck disable=SC2034
REC_VERTICAL_PADDING_BOTTOM=348

REC_MENUBAR=24

# check for --vertical flag
REC_MODE="HORIZONTAL"
if [ $# -gt 0 ]; then
  if [ "$1" == "--vertical" ] || [ "$1" == "-v" ]; then
    REC_MODE="VERTICAL"
  fi
fi

EXPECTED_SCREEN_WIDTH_VAR="EXPECTED_${REC_MODE}_SCREEN_WIDTH"
EXPECTED_SCREEN_HEIGHT_VAR="EXPECTED_${REC_MODE}_SCREEN_HEIGHT"
EXPECTED_SCREEN_WIDTH="${!EXPECTED_SCREEN_WIDTH_VAR}"
EXPECTED_SCREEN_HEIGHT="${!EXPECTED_SCREEN_HEIGHT_VAR}"

REC_WIDTH_VAR="REC_${REC_MODE}_WIDTH"
REC_HEIGHT_VAR="REC_${REC_MODE}_HEIGHT"
REC_WIDTH="${!REC_WIDTH_VAR}"
REC_HEIGHT="${!REC_HEIGHT_VAR}"

REC_PADDING_LEFT_VAR="REC_${REC_MODE}_PADDING_LEFT"
REC_PADDING_TOP_VAR="REC_${REC_MODE}_PADDING_TOP"
REC_PADDING_RIGHT_VAR="REC_${REC_MODE}_PADDING_RIGHT"
REC_PADDING_BOTTOM_VAR="REC_${REC_MODE}_PADDING_BOTTOM"

REC_PADDING_LEFT="${!REC_PADDING_LEFT_VAR}"
REC_PADDING_TOP="${!REC_PADDING_TOP_VAR}"
REC_PADDING_RIGHT="${!REC_PADDING_RIGHT_VAR}"
REC_PADDING_BOTTOM="${!REC_PADDING_BOTTOM_VAR}"

# Get currently active display config
YDISPLAY="$(yabai -m query --displays | jq 'map(select(.["has-focus"] == true))|.[0].index')"
YWIDTH="$(yabai -m query --displays | jq 'map(select(.["has-focus"] == true))|.[0].frame.w' | xargs printf "%.0f")"
YHEIGHT="$(yabai -m query --displays | jq 'map(select(.["has-focus"] == true))|.[0].frame.h' | xargs printf "%.0f")"
YSPACE="$(yabai -m query --spaces | jq 'map(select(.display == '"$YDISPLAY"' and .["has-focus"] == true)) | .[0].index')"
#YTOP="$(yabai -m config top_padding)"
#YRIGHT="$(yabai -m config right_padding)"
#YBOTTOM="$(yabai -m config bottom_padding)"
#YLEFT="$(yabai -m config left_padding)"

if [ "$YWIDTH" -ne "$EXPECTED_SCREEN_WIDTH" ] || [ "$YHEIGHT" -ne "$EXPECTED_SCREEN_HEIGHT" ]; then
  echo "WARNING: Expected a resolution of ${EXPECTED_SCREEN_WIDTH}x${EXPECTED_SCREEN_HEIGHT} but detected ${YWIDTH}x${YHEIGHT}. If this is unexpected please press CTRL-C and change your screen resolution first. Otherwise just press ENTER to continue."
  read -r
fi

echo "Adjusting padding (on DISPLAY $YDISPLAY SPACE $YSPACE) for recording of ${REC_WIDTH}x${REC_HEIGHT} (from ${YWIDTH}x${YHEIGHT})"

LEFT_PADDING="$((YWIDTH - REC_WIDTH + REC_PADDING_LEFT))"
TOP_PADDING="${REC_PADDING_TOP}"
RIGHT_PADDING="${REC_PADDING_RIGHT}"
BOTTOM_PADDING="$((YHEIGHT - REC_HEIGHT + REC_PADDING_BOTTOM - REC_MENUBAR))"

yabai -m config --space "$YSPACE" top_padding "$TOP_PADDING"
yabai -m config --space "$YSPACE" right_padding "$RIGHT_PADDING"
yabai -m config --space "$YSPACE" bottom_padding "$BOTTOM_PADDING"
yabai -m config --space "$YSPACE" left_padding "$LEFT_PADDING"

# echo yabai -m config --space "$YSPACE" top_padding "$TOP_PADDING"
# echo yabai -m config --space "$YSPACE" right_padding "$RIGHT_PADDING"
# echo yabai -m config --space "$YSPACE" bottom_padding "$BOTTOM_PADDING"
# echo yabai -m config --space "$YSPACE" left_padding "$LEFT_PADDING"
